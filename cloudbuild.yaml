options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET

steps:
  - name: 'gcr.io/cloud-builders/npm'
    args: ['install']
  - name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'build']
    env:
      # These are Next.js public environment variables used for Firebase configuration
      - 'NEXT_PUBLIC_FIREBASE_API_KEY=${_NEXT_PUBLIC_FIREBASE_API_KEY}'
      - 'NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${_NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}'
      - 'NEXT_PUBLIC_FIREBASE_PROJECT_ID=${_NEXT_PUBLIC_FIREBASE_PROJECT_ID}'
      - 'NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${_NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}'
      - 'NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${_NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}'
      - 'NEXT_PUBLIC_FIREBASE_APP_ID=${_NEXT_PUBLIC_FIREBASE_APP_ID}'
# If you are using secrets for sensitive environment variables like API keys,
# If you are using secrets for sensitive environment variables like API keys,
# you would define them in a 'secrets' section and reference them in 'secretEnv'
# in the build step.
# Example using secrets:
# steps:
#   - name: 'gcr.io/cloud-builders/npm'
#     args: ['install']
#   - name: 'gcr.io/cloud-builders/npm'
#     args: ['run', 'build']
#     secretEnv: ['FIREBASE_API_KEY'] # Reference the secret by its environment variable name
# secrets:
# - kmsKeyName: projects/PROJECT_ID/locations/LOCATION/keyRings/RING_NAME/cryptoKeys/KEY_NAME
#   secretEnv:
#     FIREBASE_API_KEY: projects/PROJECT_ID/secrets/SECRET_NAME/versions/SECRET_VERSION # Replace with your secret details
